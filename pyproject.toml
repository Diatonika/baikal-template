[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[project]
authors = [{ name = "Valery Ratsko", email = "<zitrasa@yandex.ru>" }]
description = "Baikal Template Repository"
name = "baikal-template"
version = "0.6.4"
readme = "README.md"
requires-python = ">= 3.12, < 4.0"

dependencies = [
    "dynaconf (>= 3.0, < 4.0)",
]

[tool.poetry]
exclude = [
    "src/baikal/*.py"  # Explicitly exclude all python files from baikal namespace package
]

packages = [
    { include = "baikal", from = "src" }
]

# Semantic Release Settings

[tool.semantic_release]
tag_format = "{version}"
version_toml = ["pyproject.toml:project.version"]

allow_zero_version = true
# When you are ready to release a stable version, set to true and run Python Semantic Release again.
major_on_zero = false

build_command = 'pip install "poetry >= 2.0" "rust-just >= 1.0" && just init-release && just build'
build_command_env = ["NEXUS_READ_USER", "NEXUS_READ_PASS"]

[tool.semantic_release.branches.main]
match = "main"
prerelease_token = "rc"
prerelease = false

# Private PyPI Source

[[tool.poetry.source]]
name = "baikal-pypi"
priority = "explicit"
url = "https://pypi.fury.io/zitrasa/"

# Dependency Groups

[tool.poetry.group.dev.dependencies]
click = "^8.0"
python-semantic-release = "^9.0"
rust-just = "^1.0"

[tool.poetry.group.lint.dependencies]
mypy = "^1.0"
ruff = "^0.9"

[tool.poetry.group.test.dependencies]
pytest = "^8.0"
pytest-datadir = "^1.0"

# Linter Tools

[tool.ruff.lint]
ignore = ["E203", "E501", "E701"]
select = [
    "E", "F", "W", "C90", "I", "UP", "ANN2", "ASYNC", "BLE", "FBT", "B", "A", "C4", "DTZ",
    "EM", "ISC", "PYI", "PT", "RSE", "RET", "SLF", "SIM", "TID", "PTH", "PLE1", "TRY"
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["baikal.*"]
lines-between-types = 1

[tool.mypy]
exclude = [".venv"]
explicit_package_bases = true
mypy_path = "src"
python_version = "3.12"
strict = true

[[tool.mypy.overrides]]
module = "dynaconf"
ignore_missing_imports = true

# Testing Tools

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib", "--tb=short"]
testpaths = ["tests"]